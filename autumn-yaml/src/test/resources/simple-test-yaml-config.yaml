imports: # describes a new entity with id 'imports'
  $import: com.technoirarts.autumn.bean # imports package 'com.technoirarts.autumn.bean'

--- # marks new document start, thus forcing **autumn** to process what was described in previous document; useful for bean injection (i.e. _describe dependencies first_)

simpleBean:              # describes a new entity with id 'simpleBean'
  $bean:                 # tells to treat this entity as a bean of:
    $new: SimpleTestBean # new SimpleTestBean();
  name: SimpleTestBean   # simpleBean.setName("SimpleTestBean");
  scores: [1, 2, 3]      # simpleBean.setScores(new int[]{1, 2, 3});

closedBean:
  $bean: { $new: ClosedTestBean } # new ClosedTestBean();
  name: ClosedTestBean            # will set the property even if it has no public access

---

immutableBean:
  $bean:
    $new: ImmutableTestBean    # new ImmutableTestBean( // new instance of ImmutableTestBean
    0: ImmutableTestBean       # "ImmutableTestBean", // first constructor argument
    1: { $int: 42 }            # new Integer(42), // second constructor argument, which is described by another special property '$int', yielding us new Integer
    2: { $inject: closedBean } # closedBean); // third constructor argument, wich is described by '$inject', thus giving us a reference to previously described 'closedBean' entity

initializingBean:
  $bean: { $new: InitializingBean } # new InitializingBean();
  $init: doInit                     # initializingBean.doInit() // called after all properties are set
  beanRef: { $inject: simpleBean }  # initializingBean.beanRef = simpleBean

---

beanCollection:
  $bean: { $new: TestBeanCollection }             # new TestBeanCollection();
  allTestBeans: { $inject: { $class: TestBean } } # beanCollection.allTestBeans = new TestBean[]{ simpleBean, closedBean, immutableBean, initializingBean } // '$inject' can accept a class instance and will try to satisfy the dependency by it

---

beanFactory:
  $bean: { $new: BeanFactory }
  beansName: FactoredBean

---

factoredBeans:
  - { $factory: beanFactory.getSimpleBean }
  - { $factory: beanFactory.getImmutableBean }

